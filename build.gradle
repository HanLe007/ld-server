buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath ('se.transmode.gradle:gradle-docker:1.2')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'docker'

group = 'net.le'
version = '1.0.0'
sourceCompatibility = 1.8

war {
    baseName 'server'
}

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
    compile('com.alibaba:druid-spring-boot-starter:1.1.9')
    compile('mysql:mysql-connector-java:5.1.26')
    compile('com.alibaba:fastjson:1.2.47')
    compile('io.springfox:springfox-swagger2:2.8.0')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    compile('tk.mybatis:mapper:4.0.1')
    compile('tk.mybatis:mapper-spring-boot-starter:2.0.2')
    compile('org.projectlombok:lombok:1.18.2')
    compile('junit:junit:4.12')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


// 构建docker镜像
task dockerBuilder(type: Docker, dependsOn:build) {
    println('start build docker images')
    applicationName = war.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from 'build/libs'
            into 'build/docker'
        }
    }
}